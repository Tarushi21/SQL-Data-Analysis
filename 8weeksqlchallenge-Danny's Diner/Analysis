--What is the total amount each customer spent at the restaurant?

SELECT CUSTOMER_ID, SUM(PRICE) AS TOTAL_PRICE
FROM SALES s
JOIN MENU m ON s.PRODUCT_ID = m.PRODUCT_ID
GROUP BY 1;

--How many days has each customer visited the restaurant?

SELECT CUSTOMER_ID, COUNT(DISTINCT ORDER_DATE) AS DAYS_VISITED
FROM SALES
GROUP BY 1;

--What was the first item from the menu purchased by each customer?

SELECT CUSTOMER_ID, PRODUCT_NAME FROM
(SELECT CUSTOMER_ID, PRODUCT_NAME, DENSE_RANK() OVER(PARTITION BY CUSTOMER_ID ORDER BY ORDER_DATE) AS FIRST_ORDER
FROM SALES s
JOIN MENU m ON s.PRODUCT_ID = m.PRODUCT_ID)
WHERE FIRST_ORDER = 1
GROUP BY 1,2;

--What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT m.product_name, COUNT(s.product_id) AS MOST_PURCHASED
FROM sales s
JOIN menu m ON s.product_id=m.product_id
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;


--HOW MANY TIMES EACH PRODUCT WAS PURCHASED BY EACH CUSTOMER?

SELECT CUSTOMER_ID, PRODUCT_NAME, COUNT(*)
FROM sales s
JOIN menu m ON s.product_id=m.product_id
GROUP BY 1,2;

--Which item was the most popular for each customer?

SELECT CUSTOMER_ID, PRODUCT_NAME FROM
(SELECT CUSTOMER_ID, PRODUCT_NAME, COUNT(*) AS PP, DENSE_RANK() OVER(PARTITION BY CUSTOMER_ID ORDER BY PP DESC) AS RNK
FROM sales s
JOIN menu m ON s.product_id=m.product_id
GROUP BY 1,2)
WHERE RNK=1;

--Which item was purchased first by the customer after they became a member?

WITH cte as 
(SELECT s.CUSTOMER_ID, m.PRODUCT_NAME, RANK() OVER(PARTITION BY s.CUSTOMER_ID ORDER BY s.order_date) first_order
FROM sales s
JOIN menu m ON s.product_id=m.product_id
JOIN MEMBERS mem ON s.customer_id = mem.customer_id
WHERE s.order_date >= mem.join_date)

SELECT CUSTOMER_ID,PRODUCT_NAME FROM 
cte
WHERE first_order= 1;


--Which item was purchased just before the customer became a member?

WITH cte1 as 
(SELECT s.CUSTOMER_ID, m.PRODUCT_NAME, RANK() OVER(PARTITION BY s.CUSTOMER_ID ORDER BY s.order_date desc) first_order
FROM sales s
JOIN menu m ON s.product_id=m.product_id
JOIN MEMBERS mem ON s.customer_id = mem.customer_id
WHERE s.order_date < mem.join_date)

SELECT CUSTOMER_ID,PRODUCT_NAME FROM 
cte1
WHERE first_order= 1;

--What is the total items and amount spent for each member before they became a member?

SELECT s.CUSTOMER_ID, COUNT(s.PRODUCT_ID) AS TOTAL_ITEMS , SUM(m.PRICE) AS AMOUNT_SPENT
FROM sales s
JOIN menu m ON s.product_id=m.product_id
JOIN MEMBERS mem ON s.customer_id = mem.customer_id
WHERE s.order_date < mem.join_date
GROUP BY 1;


--If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

SELECT CUSTOMER_ID,
SUM(CASE WHEN PRODUCT_NAME = 'sushi' THEN PRICE*20 ELSE PRICE*10 END) AS TOTAL_POINTS
FROM SALES s
JOIN menu m ON s.product_id=m.product_id
GROUP BY 1;

--In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - 
--how many points do customer A and B have at the end of January?

SELECT s.CUSTOMER_ID,
SUM(CASE WHEN s.ORDER_DATE = dateadd('DAY', '6', mem.JOIN_DATE) THEN PRICE*20  ELSE PRICE*10 END) AS TOTAL_PRICE
FROM SALES s
JOIN menu m ON s.product_id=m.product_id
JOIN MEMBERS mem ON mem.customer_id = s.customer_id
WHERE MONTH(s.ORDER_DATE) = 1
GROUP BY 1;
